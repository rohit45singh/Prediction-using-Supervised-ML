# -*- coding: utf-8 -*-
"""
Created on Fri Dec  4 12:00:19 2020

@author: rohit singh
"""


# Importing libraries 
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt  

# Reading data 
url = "http://bit.ly/w-data"
data = pd.read_csv(url)
print("Data imported successfully")

# plotting raw data set
data.plot(x='Hours', y='Scores', style='o')  
plt.title('Hours vs Percentage')  
plt.xlabel('Study time(Hr)')  
plt.ylabel('Score(%)')  
plt.show()

# seperating dataset into dependent and independent variable respectively
X = s_data.iloc[:, :-1].values  
y = s_data.iloc[:, 1].values  


# splitting dataset into training and test set
from sklearn.model_selection import train_test_split  
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0) 


# fitting model 
from sklearn.linear_model import LinearRegression  
reg = LinearRegression()  
reg.fit(X_train, y_train) 


# Plotting the regression line after fitting model ( Y= (slope)*X + intercept)
line = reg.coef_*X+regressor.intercept_

# Plotting for the test dataset
plt.scatter(X, y)
plt.plot(X, line)
plt.show()

#predecting the scores
print(X_test) 
y_pred = reg.predict(X_test) 

df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  


# You can also test with your own data
hours = np.reshape(9.25,(1,-1))
own_pred = reg.predict(hours)
print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_pred[0]))

from sklearn import metrics  
print('Mean Absolute Error:-', metrics.mean_absolute_error(y_test, y_pred))  
